  --SUMÁRIO:
-- Tabela chat
-- Tabela cursos
-- Tabela forma de pagamento
-- Tabela instrutor
-- Tabela instrutor_pode_criar_cursos
-- Tabela material
-- Tabela mentora
-- Tabela pagamento_cursos
-- Tabela pagamento_mentora
-- Tabela usuario


-- Tabela chat: Tabela que armazena informações sobre as conversas entre mentores e usuários.
CREATE TABLE `chat` (
  `ID_CHAT` int NOT NULL AUTO_INCREMENT,
  `MENTORA_ID_MENTORA` int NOT NULL,
  `USUARIO_CONTRATA_MENTORA_USUARIO_ID_USUARIO` int NOT NULL,
  `USUARIO_CONTRATA_MENTORA_MENTORA_USUARIO_ID_USUARIO` int NOT NULL,
  `USUARIO_CONTRATA_MENTORA_MENTORA_ID_MENTORA` int NOT NULL,
  `MENSAGEM_CHAT` longtext NOT NULL,
  `DATA_HORA_CHAT` datetime NOT NULL,
  `STATUS_CHAT` enum('Online','Offline') NOT NULL,
  PRIMARY KEY (`ID_CHAT`,`MENTORA_ID_MENTORA`,`USUARIO_CONTRATA_MENTORA_USUARIO_ID_USUARIO`,`USUARIO_CONTRATA_MENTORA_MENTORA_USUARIO_ID_USUARIO`,`USUARIO_CONTRATA_MENTORA_MENTORA_ID_MENTORA`),
  KEY `fk_CHAT_MENTORIA1_idx` (`MENTORA_ID_MENTORA`),
  KEY `fk_CHAT_USUARIO_CONTRATA_MENTORIA1_idx` (`USUARIO_CONTRATA_MENTORA_USUARIO_ID_USUARIO`,`USUARIO_CONTRATA_MENTORA_MENTORA_USUARIO_ID_USUARIO`,`USUARIO_CONTRATA_MENTORA_MENTORA_ID_MENTORA`),
  CONSTRAINT `fk_CHAT_MENTORIA1` FOREIGN KEY (`MENTORA_ID_MENTORA`) REFERENCES `mentora` (`ID_MENTORA`),
  CONSTRAINT `fk_CHAT_USUARIO_CONTRATA_MENTORIA1` FOREIGN KEY (`USUARIO_CONTRATA_MENTORA_USUARIO_ID_USUARIO`, `USUARIO_CONTRATA_MENTORA_MENTORA_USUARIO_ID_USUARIO`, `USUARIO_CONTRATA_MENTORA_MENTORA_ID_MENTORA`) REFERENCES `usuario_contrata_mentora` (`USUARIO_ID_USUARIO`, `MENTORA_USUARIO_ID_USUARIO`, `MENTORA_ID_MENTORA`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;



-- Tabela cursos: Tabela que armazena informações sobre os cursos oferecidos.
CREATE TABLE `cursos` (
  `ID_CURSOS` int NOT NULL AUTO_INCREMENT,
  `TITULO_CURSOS` varchar(60) NOT NULL, 
  `CONTEUDO_PROGRAMATICO_CURSOS` longtext NOT NULL,
  `DURACAO_CURSOS` float NOT NULL, 
  `NIVEL_DIFICUL_CURSOS` enum('Iniciante','Intermediário','Avançado') NOT NULL, 
  `PRECO_CURSOS` float NOT NULL,
  `DESCRICAO_CURSOS` mediumtext NOT NULL,
  `FOTO_CURSOS` blob NOT NULL,
  `CATEGORIA_CURSOS` varchar(50) NOT NULL, 
  `AVALIACOES_CURSOS` mediumtext,
  PRIMARY KEY (`ID_CURSOS`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


-- Tabela forma de pagamento: Tabela que armazena informações sobre as formas de pagamento disponíveis.
CREATE TABLE `forma de pagamento` (
  `ID_FORMAPAGTO` int NOT NULL AUTO_INCREMENT,
  `PIX_EMAIL_FORMAPAGTO` varchar(100) NOT NULL,
  `PIX_CPF_FORMAPAGTO` char(11) NOT NULL,
  `PIX_CHAVE_ALEATORIA_FORMAPAGTO` varbinary(32) NOT NULL,
  `PIX_CELULAR_FORMAPAGTO` char(14) NOT NULL,
  `CARTAO_FORMAPAGTO` varbinary(2048) NOT NULL,
  PRIMARY KEY (`ID_FORMAPAGTO`),
  UNIQUE KEY `PIX_EMAIL_FORMAPAGTO_UNIQUE` (`PIX_EMAIL_FORMAPAGTO`),
  UNIQUE KEY `PIX_CPF_FORMAPAGTO_UNIQUE` (`PIX_CPF_FORMAPAGTO`),
  UNIQUE KEY `FORMA DE PAGAMENTOcol_UNIQUE` (`CARTAO_FORMAPAGTO`),
  UNIQUE KEY `PIX_CHAVE_ALEATORIA_FORMAPAGTO_UNIQUE` (`PIX_CHAVE_ALEATORIA_FORMAPAGTO`),
  UNIQUE KEY `PIX_CELULAR_FORMAPAGTO_UNIQUE` (`PIX_CELULAR_FORMAPAGTO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

-- Tabela instrutor: Tabela que armazena informações sobre os instrutores.
CREATE TABLE `instrutor` (
  `ID_INSTRUTOR` int NOT NULL AUTO_INCREMENT,
  `BIOGRAFIA_INSTRUTOR` mediumtext NOT NULL,
  `USUARIO_ID_USUARIO` int NOT NULL,
  PRIMARY KEY (`ID_INSTRUTOR`),
  KEY `fk_INSTRUTOR_USUARIO1_idx` (`USUARIO_ID_USUARIO`),
  CONSTRAINT `fk_INSTRUTOR_USUARIO1` FOREIGN KEY (`USUARIO_ID_USUARIO`) REFERENCES `usuario` (`ID_USUARIO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

-- Tabela instrutor_pode_criar_cursos: Tabela de associação entre instrutores e cursos que eles podem criar.
CREATE TABLE `instrutor_pode_criar_cursos` (
  `INSTRUTOR_ID_INSTRUTOR` int NOT NULL,
  `CURSOS_ID_CURSOS` int NOT NULL,
  PRIMARY KEY (`INSTRUTOR_ID_INSTRUTOR`,`CURSOS_ID_CURSOS`),
  KEY `fk_INSTRUTOR_has_CURSOS_CURSOS1_idx` (`CURSOS_ID_CURSOS`),
  KEY `fk_INSTRUTOR_has_CURSOS_INSTRUTOR1_idx` (`INSTRUTOR_ID_INSTRUTOR`),
  CONSTRAINT `fk_INSTRUTOR_has_CURSOS_CURSOS1` FOREIGN KEY (`CURSOS_ID_CURSOS`) REFERENCES `cursos` (`ID_CURSOS`),
  CONSTRAINT `fk_INSTRUTOR_has_CURSOS_INSTRUTOR1` FOREIGN KEY (`INSTRUTOR_ID_INSTRUTOR`) REFERENCES `instrutor` (`ID_INSTRUTOR`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


-- Tabela material: Tabela que armazena informações sobre o material de apoio dos cursos.
CREATE TABLE `material` (
  `ID_MATERIAL` int NOT NULL AUTO_INCREMENT,
  `TITULO_MATERIAL` varchar(60) NOT NULL,
  `DESCRICAO_MATERIAL` mediumtext NOT NULL,
  `ARQUIVOS_MATERIAL` blob NOT NULL,
  `CURSOS_ID_CURSOS` int NOT NULL,
  PRIMARY KEY (`ID_MATERIAL`,`CURSOS_ID_CURSOS`),
  KEY `fk_MATERIAL_CURSOS1_idx` (`CURSOS_ID_CURSOS`),
  CONSTRAINT `fk_MATERIAL_CURSOS1` FOREIGN KEY (`CURSOS_ID_CURSOS`) REFERENCES `cursos` (`ID_CURSOS`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


-- Tabela mentora: Tabela que armazena informações sobre os mentores.
CREATE TABLE `mentora` (
   `ID_MENTORA` INT(11) NOT NULL AUTO_INCREMENT,
  `REDES_SOCIAIS_MENTORA` VARCHAR(30) NULL DEFAULT NULL,
  `FORM_ACADEMICA_MENTORA` MEDIUMTEXT NOT NULL,
   `DISPONIBILIDADE_HORARIO_MENTORA` varchar(20) NOT NULL,
  `STATUS_MENTORA` ENUM('Online', 'Offline') NOT NULL,
  `TITULO_MENTORA` VARCHAR(60) NOT NULL,
  `BIOGRAFIA_MENTORA` MEDIUMTEXT NOT NULL,
  `DURACAO_MENTORIA_MENTORA` MEDIUMTEXT NOT NULL,
  `AVALIACOES_MENTORA` MEDIUMTEXT NULL DEFAULT NULL,
  `usuario_ID_USUARIO` INT(11) NOT NULL,
  PRIMARY KEY (`ID_MENTORA`),
  UNIQUE INDEX `REDES_SOCIAIS_MENTORA_UNIQUE` (`REDES_SOCIAIS_MENTORA` ASC) VISIBLE,
  INDEX `fk_mentora_usuario1_idx` (`usuario_ID_USUARIO` ASC) VISIBLE,
  CONSTRAINT `fk_mentora_usuario1`
    FOREIGN KEY (`usuario_ID_USUARIO`)
    REFERENCES `bqkfbzyeptqs5ylpsmpw`.`usuario` (`ID_USUARIO`)) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;



-- Tabela pagamento_cursos: Tabela que armazena informações sobre os pagamentos de cursos realizados pelos usuários.
CREATE TABLE `pagamento_cursos` (
  `ID_PAGTOCURSOS` int NOT NULL AUTO_INCREMENT,
  `STATUS_PAGTOCURSOS` enum('Pago','Não Pago','Pendente') NOT NULL,
  `VALOR_PAGO_PAGTOCURSOS` decimal(10,0) NOT NULL,
  `DATA_PAGTOCURSOS` datetime NOT NULL,
  `FORMA DE PAGAMENTO_ID_FORMAPAGTO` int NOT NULL,
  `USUARIO_CONTRATA_CURSOS_USUARIO_ID_USUARIO` int NOT NULL,
  `USUARIO_CONTRATA_CURSOS_CURSOS_ID_CURSOS` int NOT NULL,
  PRIMARY KEY (`ID_PAGTOCURSOS`,`FORMA DE PAGAMENTO_ID_FORMAPAGTO`,`USUARIO_CONTRATA_CURSOS_USUARIO_ID_USUARIO`,`USUARIO_CONTRATA_CURSOS_CURSOS_ID_CURSOS`),
  KEY `fk_PAGAMENTO_FORMA DE PAGAMENTO1_idx` (`FORMA DE PAGAMENTO_ID_FORMAPAGTO`),
  KEY `fk_PAGAMENTO_CURSOS_USUARIO_CONTRATA_CURSOS1_idx` (`USUARIO_CONTRATA_CURSOS_USUARIO_ID_USUARIO`,`USUARIO_CONTRATA_CURSOS_CURSOS_ID_CURSOS`),
  CONSTRAINT `fk_PAGAMENTO_CURSOS_USUARIO_CONTRATA_CURSOS1` FOREIGN KEY (`USUARIO_CONTRATA_CURSOS_USUARIO_ID_USUARIO`, `USUARIO_CONTRATA_CURSOS_CURSOS_ID_CURSOS`) REFERENCES `usuario_contrata_cursos` (`USUARIO_ID_USUARIO`, `CURSOS_ID_CURSOS`),
  CONSTRAINT `fk_PAGAMENTO_FORMA DE PAGAMENTO1` FOREIGN KEY (`FORMA DE PAGAMENTO_ID_FORMAPAGTO`) REFERENCES `forma de pagamento` (`ID_FORMAPAGTO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;



-- Tabela pagamento_mentora: Tabela que armazena informações sobre os pagamentos de mentoria realizados pelos usuários.
CREATE TABLE `pagamento_mentora` (
  `ID_PAGTOMENT` int NOT NULL AUTO_INCREMENT,
  `STATUS_PAGTOMENTORA` enum('Pago','Não Pago','Pendente') NOT NULL,
  `VALOR_PAGO_PAGTOMENTORA` decimal(10,0) NOT NULL,
  `DATA_PAGTOMENTORA` datetime NOT NULL,
  `FORMA DE PAGAMENTO_ID_FORMAPAGTO` int NOT NULL,
  `USUARIO_CONTRATA_MENTORA_USUARIO_ID_USUARIO` int NOT NULL,
  `USUARIO_CONTRATA_MENTORA_MENTORA_USUARIO_ID_USUARIO` int NOT NULL,
  `USUARIO_CONTRATA_MENTORA_MENTORA_ID_MENTORA` int NOT NULL,
  PRIMARY KEY (`ID_PAGTOMENT`,`FORMA DE PAGAMENTO_ID_FORMAPAGTO`,`USUARIO_CONTRATA_MENTORA_USUARIO_ID_USUARIO`,`USUARIO_CONTRATA_MENTORA_MENTORA_USUARIO_ID_USUARIO`,`USUARIO_CONTRATA_MENTORA_MENTORA_ID_MENTORA`),
  KEY `fk_PAGAMENTO_MENTORA_FORMA DE PAGAMENTO1_idx` (`FORMA DE PAGAMENTO_ID_FORMAPAGTO`),
  KEY `fk_PAGAMENTO_MENTORA_USUARIO_CONTRATA_MENTORA1_idx` (`USUARIO_CONTRATA_MENTORA_USUARIO_ID_USUARIO`,`USUARIO_CONTRATA_MENTORA_MENTORA_USUARIO_ID_USUARIO`,`USUARIO_CONTRATA_MENTORA_MENTORA_ID_MENTORA`),
  CONSTRAINT `fk_PAGAMENTO_MENTORA_FORMA DE PAGAMENTO1` FOREIGN KEY (`FORMA DE PAGAMENTO_ID_FORMAPAGTO`) REFERENCES `forma de pagamento` (`ID_FORMAPAGTO`),
  CONSTRAINT `fk_PAGAMENTO_MENTORA_USUARIO_CONTRATA_MENTORA1` FOREIGN KEY (`USUARIO_CONTRATA_MENTORA_USUARIO_ID_USUARIO`, `USUARIO_CONTRATA_MENTORA_MENTORA_USUARIO_ID_USUARIO`, `USUARIO_CONTRATA_MENTORA_MENTORA_ID_MENTORA`) REFERENCES `usuario_contrata_mentora` (`USUARIO_ID_USUARIO`, `MENTORA_USUARIO_ID_USUARIO`, `MENTORA_ID_MENTORA`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;


-- Tabela usuario: Tabela que armazena informações sobre os usuários.
CREATE TABLE `usuario` (
  `ID_USUARIO` int NOT NULL AUTO_INCREMENT,
  `EMAIL_USUARIO` varchar(100) NOT NULL,
  `CELULAR_USUARIO` char(14) NOT NULL,
  `NOME_USUARIO` varchar(100) NOT NULL,
  `FOTO_USUARIO` mediumblob,
  `DT_NASC_USUARIO` date NOT NULL,
  `SENHA_USUARIO` char(60) NOT NULL,
  `DT_CRIACAO_CONTA_USUARIO` datetime NOT NULL,
  PRIMARY KEY (`ID_USUARIO`),
  UNIQUE KEY `EMAIL_MENTORA_UNIQUE` (`EMAIL_USUARIO`),
  UNIQUE KEY `CELULAR_MENTORA_UNIQUE` (`CELULAR_USUARIO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;



-- Tabela usuario_contrata_cursos: Tabela de associação entre usuários e cursos que eles contrataram.
CREATE TABLE `usuario_contrata_cursos` (
  `USUARIO_ID_USUARIO` int NOT NULL,
  `CURSOS_ID_CURSOS` int NOT NULL,
  PRIMARY KEY (`USUARIO_ID_USUARIO`,`CURSOS_ID_CURSOS`),
  KEY `fk_USUARIO_has_CURSOS_CURSOS1_idx` (`CURSOS_ID_CURSOS`),
  KEY `fk_USUARIO_has_CURSOS_USUARIO1_idx` (`USUARIO_ID_USUARIO`),
  CONSTRAINT `fk_USUARIO_has_CURSOS_CURSOS1` FOREIGN KEY (`CURSOS_ID_CURSOS`) REFERENCES `cursos` (`ID_CURSOS`),
  CONSTRAINT `fk_USUARIO_has_CURSOS_USUARIO1` FOREIGN KEY (`USUARIO_ID_USUARIO`) REFERENCES `usuario` (`ID_USUARIO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;



-- Tabela usuario_contrata_mentora: Tabela de associação entre usuários e mentores que eles contrataram.
CREATE TABLE `usuario_contrata_mentora` (
  `USUARIO_ID_USUARIO` int NOT NULL,
  `MENTORA_USUARIO_ID_USUARIO` int NOT NULL,
  `MENTORA_ID_MENTORA` int NOT NULL,
  PRIMARY KEY (`USUARIO_ID_USUARIO`,`MENTORA_USUARIO_ID_USUARIO`,`MENTORA_ID_MENTORA`),
  KEY `fk_perfil_has_mentoria_perfil1_idx` (`USUARIO_ID_USUARIO`),
  KEY `fk_PERFIL_HAS_MENTORIA_MENTORIA1_idx` (`MENTORA_ID_MENTORA`),
  CONSTRAINT `fk_PERFIL_HAS_MENTORIA_MENTORIA1` FOREIGN KEY (`MENTORA_ID_MENTORA`) REFERENCES `mentora` (`ID_MENTORA`),
  CONSTRAINT `fk_perfil_has_mentoria_perfil1` FOREIGN KEY (`USUARIO_ID_USUARIO`) REFERENCES `usuario` (`ID_USUARIO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

-- Tabela videoaulas: Tabela que armazena informações sobre as videoaulas dos cursos.
CREATE TABLE `videoaulas` (
  `ID_VIDEOAULAS` int NOT NULL AUTO_INCREMENT,
  `TITULO_VIDEOAULAS` varchar(60) NOT NULL,
  `URL_VIDEOAULAS` varchar(255) NOT NULL,
  `DESCRICAO_VIDEOAULAS` mediumtext NOT NULL,
  `CURSOS_ID_CURSOS` int NOT NULL,
  PRIMARY KEY (`ID_VIDEOAULAS`,`CURSOS_ID_CURSOS`),
  UNIQUE KEY `URL_VIDEOAULAS_UNIQUE` (`URL_VIDEOAULAS`),
  KEY `fk_VIDEOAULAS_CURSOS1_idx` (`CURSOS_ID_CURSOS`),
  CONSTRAINT `fk_VIDEOAULAS_CURSOS1` FOREIGN KEY (`CURSOS_ID_CURSOS`) REFERENCES `admcursos` (`ID_ADMCURSOS`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;



